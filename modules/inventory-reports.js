/**
 * DANDY Inventory ‚Äî –ú–æ–¥—É–ª—å –æ—Ç—á—ë—Ç–æ–≤ –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
 * COGS, Menu Engineering, ABC-XYZ, Waste Analysis
 */

class ReportsModule {
    constructor(inventorySystem) {
        this.system = inventorySystem;
        this.currentReport = null;
        this.dateRange = {
            from: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString().split('T')[0],
            to: new Date().toISOString().split('T')[0]
        };
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥—É–ª—è
     */
    init() {
        console.log('üìä Reports module initialized');
        this.setupDatePickers();
    }

    /**
     * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤—ã–±–æ—Ä–∞ –¥–∞—Ç
     */
    setupDatePickers() {
        const fromInput = document.getElementById('reportDateFrom');
        const toInput = document.getElementById('reportDateTo');
        
        if (fromInput) fromInput.value = this.dateRange.from;
        if (toInput) toInput.value = this.dateRange.to;
    }

    /**
     * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á—ë—Ç–∞ COGS (—Å–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–æ–¥–∞–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤)
     */
    generateCOGSReport() {
        console.log('üìä Generating COGS report...');

        // –î–µ–º–æ-–¥–∞–Ω–Ω—ã–µ –ø—Ä–æ–¥–∞–∂
        const salesData = [
            { dishId: 101, dishName: '–ü–∏—Ü—Ü–∞ –ü–µ–ø–ø–µ—Ä–æ–Ω–∏', quantity: 45, revenue: 22500, costPrice: 8100 },
            { dishId: 102, dishName: '–†–æ–ª–ª –§–∏–ª–∞–¥–µ–ª—å—Ñ–∏—è', quantity: 38, revenue: 19000, costPrice: 8360 },
            { dishId: 103, dishName: '–ë—É—Ä–≥–µ—Ä –ö–ª–∞—Å—Å–∏–∫', quantity: 52, revenue: 20800, costPrice: 7280 },
            { dishId: 104, dishName: '–ü–∞—Å—Ç–∞ –ö–∞—Ä–±–æ–Ω–∞—Ä–∞', quantity: 31, revenue: 15500, costPrice: 4650 },
            { dishId: 105, dishName: '–°–∞–ª–∞—Ç –¶–µ–∑–∞—Ä—å', quantity: 28, revenue: 11200, costPrice: 3920 }
        ];

        // –†–∞—Å—á—ë—Ç –º–µ—Ç—Ä–∏–∫
        const totalRevenue = salesData.reduce((sum, item) => sum + item.revenue, 0);
        const totalCOGS = salesData.reduce((sum, item) => sum + item.costPrice, 0);
        const grossProfit = totalRevenue - totalCOGS;
        const grossMargin = (grossProfit / totalRevenue * 100).toFixed(1);

        // –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –º–∞—Ä–∂–µ
        const sortedByMargin = salesData.map(item => ({
            ...item,
            margin: ((item.revenue - item.costPrice) / item.revenue * 100).toFixed(1)
        })).sort((a, b) => b.margin - a.margin);

        this.currentReport = {
            type: 'cogs',
            period: `${this.dateRange.from} ‚Äî ${this.dateRange.to}`,
            totalRevenue,
            totalCOGS,
            grossProfit,
            grossMargin,
            items: sortedByMargin
        };

        this.renderCOGSReport();
    }

    /**
     * –û—Ç—Ä–∏—Å–æ–≤–∫–∞ –æ—Ç—á—ë—Ç–∞ COGS
     */
    renderCOGSReport() {
        const container = document.getElementById('reportResults');
        if (!container) return;

        const report = this.currentReport;

        container.innerHTML = `
            <div class="card">
                <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 1.5rem;">
                    <h2 style="margin: 0; color: var(--dandy-green);">üìä COGS Report</h2>
                    <button class="btn btn-secondary" onclick="reportsModule.exportReport('cogs')">üì• –≠–∫—Å–ø–æ—Ä—Ç</button>
                </div>

                <div class="alert alert-info">
                    <span>üìÖ</span>
                    <div>
                        <strong>–ü–µ—Ä–∏–æ–¥:</strong> ${report.period}
                    </div>
                </div>

                <!-- –ú–µ—Ç—Ä–∏–∫–∏ -->
                <div class="grid grid-4" style="margin-bottom: 2rem;">
                    <div class="stat-card">
                        <div class="stat-value">‚ÇΩ ${report.totalRevenue.toLocaleString('ru-RU')}</div>
                        <div class="stat-label">–í—ã—Ä—É—á–∫–∞</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-value">‚ÇΩ ${report.totalCOGS.toLocaleString('ru-RU')}</div>
                        <div class="stat-label">–°–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç—å</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-value" style="color: var(--dandy-green);">‚ÇΩ ${report.grossProfit.toLocaleString('ru-RU')}</div>
                        <div class="stat-label">–í–∞–ª–æ–≤–∞—è –ø—Ä–∏–±—ã–ª—å</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-value" style="color: var(--dandy-green);">${report.grossMargin}%</div>
                        <div class="stat-label">–ú–∞—Ä–∂–∏–Ω–∞–ª—å–Ω–æ—Å—Ç—å</div>
                    </div>
                </div>

                <!-- –¢–∞–±–ª–∏—Ü–∞ –ø–æ –±–ª—é–¥–∞–º -->
                <h3 style="margin-bottom: 1rem;">–ü–æ –±–ª—é–¥–∞–º:</h3>
                <table class="table">
                    <thead>
                        <tr>
                            <th>–ë–ª—é–¥–æ</th>
                            <th style="text-align: right;">–ü—Ä–æ–¥–∞–Ω–æ</th>
                            <th style="text-align: right;">–í—ã—Ä—É—á–∫–∞</th>
                            <th style="text-align: right;">–°–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç—å</th>
                            <th style="text-align: right;">–ü—Ä–∏–±—ã–ª—å</th>
                            <th style="text-align: right;">–ú–∞—Ä–∂–∞ %</th>
                        </tr>
                    </thead>
                    <tbody>
                        ${report.items.map(item => `
                            <tr>
                                <td><strong>${item.dishName}</strong></td>
                                <td style="text-align: right;">${item.quantity} —à—Ç</td>
                                <td style="text-align: right;">‚ÇΩ ${item.revenue.toLocaleString('ru-RU')}</td>
                                <td style="text-align: right;">‚ÇΩ ${item.costPrice.toLocaleString('ru-RU')}</td>
                                <td style="text-align: right; color: var(--dandy-green);">‚ÇΩ ${(item.revenue - item.costPrice).toLocaleString('ru-RU')}</td>
                                <td style="text-align: right;">
                                    <span class="badge ${item.margin >= 70 ? 'badge-success' : item.margin >= 60 ? '' : 'badge-warning'}">
                                        ${item.margin}%
                                    </span>
                                </td>
                            </tr>
                        `).join('')}
                    </tbody>
                </table>

                <!-- –ì—Ä–∞—Ñ–∏–∫ –¥–∏–Ω–∞–º–∏–∫–∏ -->
                <div style="margin-top: 2rem; background: rgba(255,255,255,0.05); border: 1px solid rgba(255,255,255,0.12); border-radius: 12px; padding: 1.5rem;">
                    <h3 style="margin: 0 0 1rem 0; color: #F3EADB;">üìà –ì—Ä–∞—Ñ–∏–∫ –¥–∏–Ω–∞–º–∏–∫–∏</h3>
                    <canvas id="cogsChart" style="max-height: 400px;"></canvas>
                </div>
            </div>
        `;

        // –†–∏—Å—É–µ–º –≥—Ä–∞—Ñ–∏–∫ —á–µ—Ä–µ–∑ Chart.js
        this.renderCOGSChart(report.items);
    }

    /**
     * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è Menu Engineering –æ—Ç—á—ë—Ç–∞
     */
    generateMenuEngineeringReport() {
        console.log('üìä Generating Menu Engineering report...');

        // –î–µ–º–æ-–¥–∞–Ω–Ω—ã–µ –ø—Ä–æ–¥–∞–∂ —Å –º–∞—Ä–∂–æ–π –∏ –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç—å—é
        const menuData = [
            { dishId: 101, dishName: '–ü–∏—Ü—Ü–∞ –ü–µ–ø–ø–µ—Ä–æ–Ω–∏', quantity: 45, margin: 64, category: 'stars' },
            { dishId: 102, dishName: '–†–æ–ª–ª –§–∏–ª–∞–¥–µ–ª—å—Ñ–∏—è', quantity: 38, margin: 56, category: 'plowhorses' },
            { dishId: 103, dishName: '–ë—É—Ä–≥–µ—Ä –ö–ª–∞—Å—Å–∏–∫', quantity: 52, margin: 65, category: 'stars' },
            { dishId: 104, dishName: '–ü–∞—Å—Ç–∞ –ö–∞—Ä–±–æ–Ω–∞—Ä–∞', quantity: 31, margin: 70, category: 'puzzles' },
            { dishId: 105, dishName: '–°–∞–ª–∞—Ç –¶–µ–∑–∞—Ä—å', quantity: 28, margin: 65, category: 'puzzles' },
            { dishId: 106, dishName: '–°—É–ø –¥–Ω—è', quantity: 15, margin: 45, category: 'dogs' },
            { dishId: 107, dishName: '–î–µ—Å–µ—Ä—Ç –¢–∏—Ä–∞–º–∏—Å—É', quantity: 22, margin: 72, category: 'puzzles' },
            { dishId: 108, dishName: '–ö–∞—Ä—Ç–æ—Ñ–µ–ª—å —Ñ—Ä–∏', quantity: 48, margin: 55, category: 'plowhorses' }
        ];

        // –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
        const stars = menuData.filter(d => d.category === 'stars');
        const plowhorses = menuData.filter(d => d.category === 'plowhorses');
        const puzzles = menuData.filter(d => d.category === 'puzzles');
        const dogs = menuData.filter(d => d.category === 'dogs');

        this.currentReport = {
            type: 'menu_engineering',
            period: `${this.dateRange.from} ‚Äî ${this.dateRange.to}`,
            stars,
            plowhorses,
            puzzles,
            dogs
        };

        this.renderMenuEngineeringReport();
    }

    /**
     * –û—Ç—Ä–∏—Å–æ–≤–∫–∞ Menu Engineering –æ—Ç—á—ë—Ç–∞
     */
    renderMenuEngineeringReport() {
        const container = document.getElementById('reportResults');
        if (!container) return;

        const report = this.currentReport;

        container.innerHTML = `
            <div class="card">
                <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 1.5rem;">
                    <h2 style="margin: 0; color: var(--dandy-green);">‚≠ê Menu Engineering</h2>
                    <button class="btn btn-secondary" onclick="reportsModule.exportReport('menu_engineering')">üì• –≠–∫—Å–ø–æ—Ä—Ç</button>
                </div>

                <div class="alert alert-info">
                    <span>‚ÑπÔ∏è</span>
                    <div>
                        <strong>–ú–µ—Ç–æ–¥:</strong> –ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è –±–ª—é–¥ –ø–æ –º–∞—Ä–∂–∏–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –∏ –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç–∏<br>
                        <strong>–ü–µ—Ä–∏–æ–¥:</strong> ${report.period}
                    </div>
                </div>

                <!-- –ú–∞—Ç—Ä–∏—Ü–∞ 2x2 -->
                <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 1.5rem; margin-bottom: 2rem;">
                    <!-- Stars -->
                    <div style="background: linear-gradient(135deg, #10b981 0%, #059669 100%); padding: 1.5rem; border-radius: 12px; color: white;">
                        <div style="display: flex; align-items: center; gap: 0.5rem; margin-bottom: 1rem;">
                            <span style="font-size: 1.5rem;">‚≠ê</span>
                            <h3 style="margin: 0;">Stars (–ó–≤—ë–∑–¥—ã)</h3>
                        </div>
                        <p style="opacity: 0.9; margin-bottom: 1rem; font-size: 0.9em;">–í—ã—Å–æ–∫–∞—è –º–∞—Ä–∂–∞ + –í—ã—Å–æ–∫–∏–π —Å–ø—Ä–æ—Å</p>
                        <div style="background: rgba(255,255,255,0.1); padding: 1rem; border-radius: 8px;">
                            ${report.stars.length > 0 ? report.stars.map(d => `
                                <div style="margin-bottom: 0.5rem;">
                                    <strong>${d.dishName}</strong><br>
                                    <span style="font-size: 0.85em; opacity: 0.9;">–ü—Ä–æ–¥–∞–Ω–æ: ${d.quantity} | –ú–∞—Ä–∂–∞: ${d.margin}%</span>
                                </div>
                            `).join('') : '<p style="opacity: 0.7;">–ù–µ—Ç –±–ª—é–¥ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</p>'}
                        </div>
                        <div style="margin-top: 1rem; padding: 0.75rem; background: rgba(255,255,255,0.2); border-radius: 8px; font-size: 0.9em;">
                            üí° <strong>–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è:</strong> –ü—Ä–æ–¥–≤–∏–≥–∞—Ç—å, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –∫–∞—á–µ—Å—Ç–≤–æ
                        </div>
                    </div>

                    <!-- Puzzles -->
                    <div style="background: linear-gradient(135deg, #f59e0b 0%, #d97706 100%); padding: 1.5rem; border-radius: 12px; color: white;">
                        <div style="display: flex; align-items: center; gap: 0.5rem; margin-bottom: 1rem;">
                            <span style="font-size: 1.5rem;">üß©</span>
                            <h3 style="margin: 0;">Puzzles (–ó–∞–≥–∞–¥–∫–∏)</h3>
                        </div>
                        <p style="opacity: 0.9; margin-bottom: 1rem; font-size: 0.9em;">–í—ã—Å–æ–∫–∞—è –º–∞—Ä–∂–∞ + –ù–∏–∑–∫–∏–π —Å–ø—Ä–æ—Å</p>
                        <div style="background: rgba(255,255,255,0.1); padding: 1rem; border-radius: 8px;">
                            ${report.puzzles.length > 0 ? report.puzzles.map(d => `
                                <div style="margin-bottom: 0.5rem;">
                                    <strong>${d.dishName}</strong><br>
                                    <span style="font-size: 0.85em; opacity: 0.9;">–ü—Ä–æ–¥–∞–Ω–æ: ${d.quantity} | –ú–∞—Ä–∂–∞: ${d.margin}%</span>
                                </div>
                            `).join('') : '<p style="opacity: 0.7;">–ù–µ—Ç –±–ª—é–¥ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</p>'}
                        </div>
                        <div style="margin-top: 1rem; padding: 0.75rem; background: rgba(255,255,255,0.2); border-radius: 8px; font-size: 0.9em;">
                            üí° <strong>–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è:</strong> –ü–µ—Ä–µ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ, –≤–æ–∑–º–æ–∂–Ω–æ —É–±—Ä–∞—Ç—å
                        </div>
                    </div>

                    <!-- Plowhorses -->
                    <div style="background: linear-gradient(135deg, #3b82f6 0%, #2563eb 100%); padding: 1.5rem; border-radius: 12px; color: white;">
                        <div style="display: flex; align-items: center; gap: 0.5rem; margin-bottom: 1rem;">
                            <span style="font-size: 1.5rem;">üê¥</span>
                            <h3 style="margin: 0;">Plowhorses (–¢—Ä—É–¥—è–≥–∏)</h3>
                        </div>
                        <p style="opacity: 0.9; margin-bottom: 1rem; font-size: 0.9em;">–ù–∏–∑–∫–∞—è –º–∞—Ä–∂–∞ + –í—ã—Å–æ–∫–∏–π —Å–ø—Ä–æ—Å</p>
                        <div style="background: rgba(255,255,255,0.1); padding: 1rem; border-radius: 8px;">
                            ${report.plowhorses.length > 0 ? report.plowhorses.map(d => `
                                <div style="margin-bottom: 0.5rem;">
                                    <strong>${d.dishName}</strong><br>
                                    <span style="font-size: 0.85em; opacity: 0.9;">–ü—Ä–æ–¥–∞–Ω–æ: ${d.quantity} | –ú–∞—Ä–∂–∞: ${d.margin}%</span>
                                </div>
                            `).join('') : '<p style="opacity: 0.7;">–ù–µ—Ç –±–ª—é–¥ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</p>'}
                        </div>
                        <div style="margin-top: 1rem; padding: 0.75rem; background: rgba(255,255,255,0.2); border-radius: 8px; font-size: 0.9em;">
                            üí° <strong>–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è:</strong> –£–≤–µ–ª–∏—á–∏—Ç—å —Ü–µ–Ω—É –∏–ª–∏ —Å–Ω–∏–∑–∏—Ç—å —Å–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç—å
                        </div>
                    </div>

                    <!-- Dogs -->
                    <div style="background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%); padding: 1.5rem; border-radius: 12px; color: white;">
                        <div style="display: flex; align-items: center; gap: 0.5rem; margin-bottom: 1rem;">
                            <span style="font-size: 1.5rem;">üêï</span>
                            <h3 style="margin: 0;">Dogs (–°–æ–±–∞–∫–∏)</h3>
                        </div>
                        <p style="opacity: 0.9; margin-bottom: 1rem; font-size: 0.9em;">–ù–∏–∑–∫–∞—è –º–∞—Ä–∂–∞ + –ù–∏–∑–∫–∏–π —Å–ø—Ä–æ—Å</p>
                        <div style="background: rgba(255,255,255,0.1); padding: 1rem; border-radius: 8px;">
                            ${report.dogs.length > 0 ? report.dogs.map(d => `
                                <div style="margin-bottom: 0.5rem;">
                                    <strong>${d.dishName}</strong><br>
                                    <span style="font-size: 0.85em; opacity: 0.9;">–ü—Ä–æ–¥–∞–Ω–æ: ${d.quantity} | –ú–∞—Ä–∂–∞: ${d.margin}%</span>
                                </div>
                            `).join('') : '<p style="opacity: 0.7;">–ù–µ—Ç –±–ª—é–¥ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</p>'}
                        </div>
                        <div style="margin-top: 1rem; padding: 0.75rem; background: rgba(255,255,255,0.2); border-radius: 8px; font-size: 0.9em;">
                            üí° <strong>–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è:</strong> –£–±—Ä–∞—Ç—å –∏–∑ –º–µ–Ω—é
                        </div>
                    </div>
                </div>

                <!-- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ -->
                <div class="grid grid-4">
                    <div class="stat-card">
                        <div class="stat-value" style="color: #10b981;">${report.stars.length}</div>
                        <div class="stat-label">–ó–≤—ë–∑–¥</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-value" style="color: #f59e0b;">${report.puzzles.length}</div>
                        <div class="stat-label">–ó–∞–≥–∞–¥–æ–∫</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-value" style="color: #3b82f6;">${report.plowhorses.length}</div>
                        <div class="stat-label">–¢—Ä—É–¥—è–≥</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-value" style="color: #ef4444;">${report.dogs.length}</div>
                        <div class="stat-label">–°–æ–±–∞–∫</div>
                    </div>
                </div>
            </div>
        `;
    }

    /**
     * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è ABC-XYZ –∞–Ω–∞–ª–∏–∑–∞
     */
    generateABCXYZReport() {
        console.log('üìä Generating ABC-XYZ report...');

        // –î–µ–º–æ-–¥–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä–æ–≤ —Å –æ–±–æ—Ä–æ—Ç–æ–º –∏ –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç—å—é
        const productsData = [
            { id: 1, name: '–õ–æ—Å–æ—Å—å —Ñ–∏–ª–µ', revenue: 144000, volatility: 15, abc: 'A', xyz: 'X' },
            { id: 2, name: '–°—ã—Ä –ú–æ—Ü–∞—Ä–µ–ª–ª–∞', revenue: 102000, volatility: 12, abc: 'A', xyz: 'X' },
            { id: 3, name: '–ú—É–∫–∞ –ø—à–µ–Ω–∏—á–Ω–∞—è', revenue: 95000, volatility: 8, abc: 'A', xyz: 'X' },
            { id: 4, name: '–¢–æ–º–∞—Ç—ã —Å–≤–µ–∂–∏–µ', revenue: 78000, volatility: 45, abc: 'B', xyz: 'Y' },
            { id: 5, name: '–ì–æ–≤—è–¥–∏–Ω–∞ –≤—ã—Ä–µ–∑–∫–∞', revenue: 68000, volatility: 22, abc: 'B', xyz: 'Y' },
            { id: 6, name: '–ö—É—Ä–∏—Ü–∞ –æ—Ö–ª–∞–∂–¥–µ–Ω–Ω–∞—è', revenue: 54000, volatility: 18, abc: 'B', xyz: 'X' },
            { id: 7, name: '–†–∏—Å –¥–ª—è —Ä–æ–ª–ª–æ–≤', revenue: 32000, volatility: 10, abc: 'C', xyz: 'X' },
            { id: 8, name: '–ö—Ä–µ–≤–µ—Ç–∫–∏ –∫–æ—Ä–æ–ª–µ–≤—Å–∫–∏–µ', revenue: 28000, volatility: 65, abc: 'C', xyz: 'Z' },
            { id: 9, name: '–ü–∞—Ä–º–µ–∑–∞–Ω —Ç—ë—Ä—Ç—ã–π', revenue: 18000, volatility: 38, abc: 'C', xyz: 'Y' },
            { id: 10, name: '–¢—Ä—é—Ñ–µ–ª—å–Ω–æ–µ –º–∞—Å–ª–æ', revenue: 8000, volatility: 80, abc: 'C', xyz: 'Z' }
        ];

        // –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞
        const categories = {
            'AX': [], 'AY': [], 'AZ': [],
            'BX': [], 'BY': [], 'BZ': [],
            'CX': [], 'CY': [], 'CZ': []
        };

        productsData.forEach(product => {
            const key = `${product.abc}${product.xyz}`;
            if (categories[key]) {
                categories[key].push(product);
            }
        });

        this.currentReport = {
            type: 'abc_xyz',
            period: `${this.dateRange.from} ‚Äî ${this.dateRange.to}`,
            categories,
            totalRevenue: productsData.reduce((sum, p) => sum + p.revenue, 0)
        };

        this.renderABCXYZReport();
    }

    /**
     * –û—Ç—Ä–∏—Å–æ–≤–∫–∞ ABC-XYZ –æ—Ç—á—ë—Ç–∞
     */
    renderABCXYZReport() {
        const container = document.getElementById('reportResults');
        if (!container) return;

        const report = this.currentReport;

        const getCategoryColor = (key) => {
            const colors = {
                'AX': '#10b981', 'AY': '#059669', 'AZ': '#047857',
                'BX': '#3b82f6', 'BY': '#2563eb', 'BZ': '#1d4ed8',
                'CX': '#f59e0b', 'CY': '#d97706', 'CZ': '#b45309'
            };
            return colors[key] || '#666';
        };

        const getCategoryPriority = (key) => {
            const priorities = {
                'AX': '–í—ã—Å—à–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç: —Å—Ç–∞–±–∏–ª—å–Ω—ã–µ —Ö–∏—Ç—ã',
                'AY': '–í—ã—Å–æ–∫–∏–π: —Å–µ–∑–æ–Ω–Ω—ã–µ –ª–∏–¥–µ—Ä—ã',
                'AZ': '–°—Ä–µ–¥–Ω–∏–π: –Ω–µ–ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º—ã–µ –ª–∏–¥–µ—Ä—ã',
                'BX': '–°—Ä–µ–¥–Ω–∏–π: —Å—Ç–∞–±–∏–ª—å–Ω–∞—è –±–∞–∑–∞',
                'BY': '–°—Ä–µ–¥–Ω–∏–π: —Å–µ–∑–æ–Ω–Ω–∞—è –±–∞–∑–∞',
                'BZ': '–ù–∏–∑–∫–∏–π: –Ω–µ—Å—Ç–∞–±–∏–ª—å–Ω—ã–µ',
                'CX': '–ù–∏–∑–∫–∏–π: —Å—Ç–∞–±–∏–ª—å–Ω—ã–π —Ö–≤–æ—Å—Ç',
                'CY': '–û—á–µ–Ω—å –Ω–∏–∑–∫–∏–π: —Å–µ–∑–æ–Ω–Ω—ã–π —Ö–≤–æ—Å—Ç',
                'CZ': '–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π: —Å–ª—É—á–∞–π–Ω—ã–µ'
            };
            return priorities[key] || '';
        };

        container.innerHTML = `
            <div class="card">
                <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 1.5rem;">
                    <h2 style="margin: 0; color: var(--dandy-green);">üìä ABC-XYZ –ê–Ω–∞–ª–∏–∑</h2>
                    <button class="btn btn-secondary" onclick="reportsModule.exportReport('abc_xyz')">üì• –≠–∫—Å–ø–æ—Ä—Ç</button>
                </div>

                <div class="alert alert-info">
                    <span>‚ÑπÔ∏è</span>
                    <div>
                        <strong>ABC:</strong> –ü–æ –≤—ã—Ä—É—á–∫–µ (A=80%, B=15%, C=5%)<br>
                        <strong>XYZ:</strong> –ü–æ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏ —Å–ø—Ä–æ—Å–∞ (X=—Å—Ç–∞–±–∏–ª—å–Ω—ã–π, Y=—Å–µ–∑–æ–Ω–Ω—ã–π, Z=–Ω–µ–ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º—ã–π)<br>
                        <strong>–ü–µ—Ä–∏–æ–¥:</strong> ${report.period}
                    </div>
                </div>

                <!-- –ú–∞—Ç—Ä–∏—Ü–∞ 3x3 -->
                <div style="display: grid; grid-template-columns: repeat(3, 1fr); gap: 1rem; margin-bottom: 2rem;">
                    ${Object.keys(report.categories).map(key => {
                        const items = report.categories[key];
                        const color = getCategoryColor(key);
                        const priority = getCategoryPriority(key);
                        
                        return `
                            <div style="background: ${color}; padding: 1rem; border-radius: 12px; color: white;">
                                <div style="font-size: 1.2rem; font-weight: bold; margin-bottom: 0.5rem;">${key}</div>
                                <div style="font-size: 0.85em; opacity: 0.9; margin-bottom: 0.75rem;">${priority}</div>
                                <div style="background: rgba(255,255,255,0.15); padding: 0.75rem; border-radius: 8px; font-size: 0.9em;">
                                    <strong>${items.length}</strong> —Ç–æ–≤–∞—Ä–æ–≤
                                    ${items.length > 0 ? `<br><span style="opacity: 0.8;">${items[0].name}</span>` : ''}
                                </div>
                            </div>
                        `;
                    }).join('')}
                </div>

                <!-- –õ–µ–≥–µ–Ω–¥–∞ -->
                <div class="grid grid-2" style="margin-bottom: 2rem;">
                    <div style="background: #f9f9f9; padding: 1.5rem; border-radius: 12px;">
                        <h3 style="margin: 0 0 1rem 0; color: var(--dandy-green);">üìà ABC (–ø–æ –≤—ã—Ä—É—á–∫–µ)</h3>
                        <ul style="list-style: none; padding: 0; margin: 0;">
                            <li style="margin-bottom: 0.5rem;">
                                <span style="display: inline-block; width: 24px; height: 24px; background: #10b981; border-radius: 4px; margin-right: 0.5rem;"></span>
                                <strong>A:</strong> 80% –æ–±–æ—Ä–æ—Ç–∞ (—Ç–æ–ø —Ç–æ–≤–∞—Ä—ã)
                            </li>
                            <li style="margin-bottom: 0.5rem;">
                                <span style="display: inline-block; width: 24px; height: 24px; background: #3b82f6; border-radius: 4px; margin-right: 0.5rem;"></span>
                                <strong>B:</strong> 15% –æ–±–æ—Ä–æ—Ç–∞ (—Å—Ä–µ–¥–Ω—è—è –∑–æ–Ω–∞)
                            </li>
                            <li>
                                <span style="display: inline-block; width: 24px; height: 24px; background: #f59e0b; border-radius: 4px; margin-right: 0.5rem;"></span>
                                <strong>C:</strong> 5% –æ–±–æ—Ä–æ—Ç–∞ (—Ö–≤–æ—Å—Ç)
                            </li>
                        </ul>
                    </div>

                    <div style="background: #f9f9f9; padding: 1.5rem; border-radius: 12px;">
                        <h3 style="margin: 0 0 1rem 0; color: var(--dandy-green);">üìâ XYZ (–ø–æ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏)</h3>
                        <ul style="list-style: none; padding: 0; margin: 0;">
                            <li style="margin-bottom: 0.5rem;">
                                <strong>X:</strong> –°—Ç–∞–±–∏–ª—å–Ω—ã–π —Å–ø—Ä–æ—Å (–≤–∞—Ä–∏–∞—Ü–∏—è &lt;15%)
                            </li>
                            <li style="margin-bottom: 0.5rem;">
                                <strong>Y:</strong> –°–µ–∑–æ–Ω–Ω—ã–π —Å–ø—Ä–æ—Å (–≤–∞—Ä–∏–∞—Ü–∏—è 15-50%)
                            </li>
                            <li>
                                <strong>Z:</strong> –ù–µ–ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º—ã–π (–≤–∞—Ä–∏–∞—Ü–∏—è &gt;50%)
                            </li>
                        </ul>
                    </div>
                </div>

                <!-- –î–µ—Ç–∞–ª—å–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ -->
                <h3 style="margin-bottom: 1rem;">–î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ —Ç–æ–≤–∞—Ä–∞–º:</h3>
                <table class="table">
                    <thead>
                        <tr>
                            <th>–¢–æ–≤–∞—Ä</th>
                            <th style="text-align: right;">–í—ã—Ä—É—á–∫–∞</th>
                            <th style="text-align: center;">ABC</th>
                            <th style="text-align: center;">XYZ</th>
                            <th style="text-align: center;">–ö–∞—Ç–µ–≥–æ—Ä–∏—è</th>
                            <th style="text-align: center;">–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç</th>
                        </tr>
                    </thead>
                    <tbody>
                        ${Object.keys(report.categories).flatMap(key => 
                            report.categories[key].map(item => {
                                const color = getCategoryColor(key);
                                return `
                                    <tr>
                                        <td><strong>${item.name}</strong></td>
                                        <td style="text-align: right;">‚ÇΩ ${item.revenue.toLocaleString('ru-RU')}</td>
                                        <td style="text-align: center;">
                                            <span class="badge" style="background: ${getCategoryColor(item.abc + 'X')};">${item.abc}</span>
                                        </td>
                                        <td style="text-align: center;">
                                            <span class="badge">${item.xyz}</span>
                                        </td>
                                        <td style="text-align: center;">
                                            <span class="badge" style="background: ${color};">${key}</span>
                                        </td>
                                        <td style="text-align: center; font-size: 0.85em; color: #666;">
                                            ${getCategoryPriority(key)}
                                        </td>
                                    </tr>
                                `;
                            })
                        ).join('')}
                    </tbody>
                </table>
            </div>
        `;
    }

    /**
     * –û—Ç—Ä–∏—Å–æ–≤–∫–∞ –≥—Ä–∞—Ñ–∏–∫–∞ COGS
     */
    renderCOGSChart(items) {
        setTimeout(() => {
            const canvas = document.getElementById('cogsChart');
            if (!canvas) return;

            const ctx = canvas.getContext('2d');
            
            // –£–Ω–∏—á—Ç–æ–∂–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π –≥—Ä–∞—Ñ–∏–∫, –µ—Å–ª–∏ –±—ã–ª
            if (this.cogsChart) {
                this.cogsChart.destroy();
            }

            // –î–∞–Ω–Ω—ã–µ –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–∞
            const labels = items.map(item => item.dishName);
            const revenues = items.map(item => item.revenue);
            const costs = items.map(item => item.costPrice);
            const profits = items.map(item => item.revenue - item.costPrice);

            this.cogsChart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: labels,
                    datasets: [
                        {
                            label: '–í—ã—Ä—É—á–∫–∞',
                            data: revenues,
                            backgroundColor: 'rgba(34, 197, 94, 0.6)',
                            borderColor: 'rgba(34, 197, 94, 1)',
                            borderWidth: 1
                        },
                        {
                            label: '–°–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç—å',
                            data: costs,
                            backgroundColor: 'rgba(239, 68, 68, 0.6)',
                            borderColor: 'rgba(239, 68, 68, 1)',
                            borderWidth: 1
                        },
                        {
                            label: '–ü—Ä–∏–±—ã–ª—å',
                            data: profits,
                            backgroundColor: 'rgba(59, 130, 246, 0.6)',
                            borderColor: 'rgba(59, 130, 246, 1)',
                            borderWidth: 1
                        }
                    ]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: true,
                    plugins: {
                        legend: {
                            labels: {
                                color: '#F3EADB'
                            }
                        },
                        tooltip: {
                            callbacks: {
                                label: function(context) {
                                    return context.dataset.label + ': ‚ÇΩ ' + context.parsed.y.toLocaleString('ru-RU');
                                }
                            }
                        }
                    },
                    scales: {
                        x: {
                            ticks: { color: '#F3EADB' },
                            grid: { color: 'rgba(255,255,255,0.1)' }
                        },
                        y: {
                            ticks: {
                                color: '#F3EADB',
                                callback: function(value) {
                                    return '‚ÇΩ ' + value.toLocaleString('ru-RU');
                                }
                            },
                            grid: { color: 'rgba(255,255,255,0.1)' }
                        }
                    }
                }
            });
        }, 100);
    }

    /**
     * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á—ë—Ç–∞ Waste / –ü–æ—Ç–µ—Ä–∏
     */
    generateWasteReport() {
        console.log('üìä Generating Waste report...');

        // –î–µ–º–æ-–¥–∞–Ω–Ω—ã–µ —Å–ø–∏—Å–∞–Ω–∏–π
        const wasteData = [
            { date: '2025-09-28', productName: '–°–∞–ª–∞—Ç –ê–π—Å–±–µ—Ä–≥', quantity: 2.5, unit: '–∫–≥', reason: '–ë—Ä–∞–∫', cost: 450 },
            { date: '2025-09-27', productName: '–ú–æ–ª–æ–∫–æ 3.2%', quantity: 1, unit: '–ª', reason: '–ò—Å—Ç—ë–∫ —Å—Ä–æ–∫', cost: 80 },
            { date: '2025-09-26', productName: '–¢–æ–º–∞—Ç—ã —Å–≤–µ–∂–∏–µ', quantity: 3.2, unit: '–∫–≥', reason: '–ü–æ—Ä—á–∞', cost: 640 },
            { date: '2025-09-25', productName: '–õ–æ—Å–æ—Å—å —Ñ–∏–ª–µ', quantity: 0.5, unit: '–∫–≥', reason: '–û—à–∏–±–∫–∞ –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è', cost: 600 },
            { date: '2025-09-24', productName: '–°–ª–∏–≤–∫–∏ 33%', quantity: 0.8, unit: '–ª', reason: '–†–∞–∑–ª–∏–≤', cost: 320 },
            { date: '2025-09-23', productName: '–û–≥—É—Ä—Ü—ã —Å–≤–µ–∂–∏–µ', quantity: 1.5, unit: '–∫–≥', reason: '–ü–æ—Ä—á–∞', cost: 150 },
            { date: '2025-09-22', productName: '–ê–≤–æ–∫–∞–¥–æ', quantity: 5, unit: '—à—Ç', reason: '–ë—Ä–∞–∫', cost: 500 }
        ];

        const totalWaste = wasteData.reduce((sum, item) => sum + item.cost, 0);
        const totalQuantity = wasteData.length;

        // –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ –ø—Ä–∏—á–∏–Ω–∞–º
        const byReason = {};
        wasteData.forEach(item => {
            if (!byReason[item.reason]) {
                byReason[item.reason] = { count: 0, cost: 0 };
            }
            byReason[item.reason].count++;
            byReason[item.reason].cost += item.cost;
        });

        this.currentReport = {
            type: 'waste',
            period: `${this.dateRange.from} ‚Äî ${this.dateRange.to}`,
            totalWaste,
            totalQuantity,
            items: wasteData,
            byReason
        };

        this.renderWasteReport();
    }

    /**
     * –û—Ç—Ä–∏—Å–æ–≤–∫–∞ –æ—Ç—á—ë—Ç–∞ Waste
     */
    renderWasteReport() {
        const container = document.getElementById('reportResults');
        if (!container) return;

        const report = this.currentReport;

        container.innerHTML = `
            <div class="card">
                <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 1.5rem;">
                    <h2 style="margin: 0; color: #eebc5c;">üóëÔ∏è Waste Report / –ü–æ—Ç–µ—Ä–∏</h2>
                    <button class="btn btn-secondary" onclick="reportsModule.exportReport('waste')">üì• –≠–∫—Å–ø–æ—Ä—Ç</button>
                </div>

                <div style="background: rgba(239, 68, 68, 0.15); border: 1px solid rgba(239, 68, 68, 0.3); padding: 1rem; border-radius: 8px; margin-bottom: 1.5rem;">
                    <span style="color: #fca5a5;">‚ö†Ô∏è</span>
                    <div style="color: #F3EADB;">
                        <strong>–ü–µ—Ä–∏–æ–¥:</strong> ${report.period}
                    </div>
                </div>

                <!-- –ú–µ—Ç—Ä–∏–∫–∏ -->
                <div class="grid grid-3" style="margin-bottom: 2rem;">
                    <div class="stat-card">
                        <div class="stat-value" style="color: #ef4444;">‚ÇΩ ${report.totalWaste.toLocaleString('ru-RU')}</div>
                        <div class="stat-label">–û–±—â–∏–µ –ø–æ—Ç–µ—Ä–∏</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-value">${report.totalQuantity}</div>
                        <div class="stat-label">–°–ª—É—á–∞–µ–≤ —Å–ø–∏—Å–∞–Ω–∏—è</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-value">‚ÇΩ ${Math.round(report.totalWaste / report.totalQuantity).toLocaleString('ru-RU')}</div>
                        <div class="stat-label">–°—Ä–µ–¥–Ω—è—è –ø–æ—Ç–µ—Ä—è</div>
                    </div>
                </div>

                <!-- –ü–æ –ø—Ä–∏—á–∏–Ω–∞–º -->
                <h3 style="margin-bottom: 1rem; color: #F3EADB;">–ü–æ –ø—Ä–∏—á–∏–Ω–∞–º:</h3>
                <div class="grid grid-2" style="margin-bottom: 2rem;">
                    ${Object.keys(report.byReason).map(reason => {
                        const data = report.byReason[reason];
                        const percent = (data.cost / report.totalWaste * 100).toFixed(1);
                        return `
                            <div style="background: rgba(255,255,255,0.05); border: 1px solid rgba(255,255,255,0.12); padding: 1.5rem; border-radius: 12px;">
                                <h4 style="margin: 0 0 0.75rem 0; color: #eebc5c;">${reason}</h4>
                                <div style="display: flex; justify-content: space-between; margin-bottom: 0.5rem; color: #F3EADB;">
                                    <span>–°–ª—É—á–∞–µ–≤:</span>
                                    <strong>${data.count}</strong>
                                </div>
                                <div style="display: flex; justify-content: space-between; margin-bottom: 0.5rem; color: #F3EADB;">
                                    <span>–°—É–º–º–∞:</span>
                                    <strong>‚ÇΩ ${data.cost.toLocaleString('ru-RU')}</strong>
                                </div>
                                <div style="margin-top: 0.75rem; background: rgba(239, 68, 68, 0.2); height: 8px; border-radius: 4px; overflow: hidden;">
                                    <div style="width: ${percent}%; height: 100%; background: #ef4444;"></div>
                                </div>
                                <div style="text-align: right; margin-top: 0.25rem; font-size: 0.85em; color: #fca5a5;">${percent}%</div>
                            </div>
                        `;
                    }).join('')}
                </div>

                <!-- –î–µ—Ç–∞–ª—å–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ -->
                <h3 style="margin-bottom: 1rem; color: #F3EADB;">–î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è:</h3>
                <table class="table">
                    <thead>
                        <tr>
                            <th>–î–∞—Ç–∞</th>
                            <th>–¢–æ–≤–∞—Ä</th>
                            <th style="text-align: right;">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ</th>
                            <th>–ü—Ä–∏—á–∏–Ω–∞</th>
                            <th style="text-align: right;">–°—Ç–æ–∏–º–æ—Å—Ç—å</th>
                        </tr>
                    </thead>
                    <tbody>
                        ${report.items.map(item => `
                            <tr>
                                <td>${new Date(item.date).toLocaleDateString('ru-RU')}</td>
                                <td><strong>${item.productName}</strong></td>
                                <td style="text-align: right;">${item.quantity} ${item.unit}</td>
                                <td>
                                    <span class="badge badge-warning">${item.reason}</span>
                                </td>
                                <td style="text-align: right; color: #ef4444; font-weight: 600;">‚ÇΩ ${item.cost.toLocaleString('ru-RU')}</td>
                            </tr>
                        `).join('')}
                    </tbody>
                    <tfoot>
                        <tr style="background: rgba(255,255,255,0.05); font-weight: 700;">
                            <td colspan="4">–ò–¢–û–ì–û:</td>
                            <td style="text-align: right; color: #ef4444;">‚ÇΩ ${report.totalWaste.toLocaleString('ru-RU')}</td>
                        </tr>
                    </tfoot>
                </table>
            </div>
        `;
    }

    /**
     * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á—ë—Ç–∞ –û–±–æ—Ä–∞—á–∏–≤–∞–µ–º–æ—Å—Ç—å
     */
    generateTurnoverReport() {
        console.log('üìä Generating Turnover report...');

        // –î–µ–º–æ-–¥–∞–Ω–Ω—ã–µ –æ–±–æ—Ä–∞—á–∏–≤–∞–µ–º–æ—Å—Ç–∏
        const turnoverData = [
            { productName: 'Coca-Cola 0.33–ª', avgStock: 240, dailySales: 48, turnoverDays: 5, status: 'fast' },
            { productName: '–¢–µ—Å—Ç–æ –¥–ª—è –ø–∏—Ü—Ü—ã', avgStock: 50, dailySales: 8, turnoverDays: 6.25, status: 'fast' },
            { productName: '–°—ã—Ä –ú–æ—Ü–∞—Ä–µ–ª–ª–∞', avgStock: 25, dailySales: 3.5, turnoverDays: 7.14, status: 'normal' },
            { productName: '–¢–æ–º–∞—Ç—ã —Å–≤–µ–∂–∏–µ', avgStock: 30, dailySales: 4, turnoverDays: 7.5, status: 'normal' },
            { productName: '–õ–æ—Å–æ—Å—å —Ñ–∏–ª–µ', avgStock: 15, dailySales: 1.2, turnoverDays: 12.5, status: 'slow' },
            { productName: '–ê–≤–æ–∫–∞–¥–æ', avgStock: 40, dailySales: 2.5, turnoverDays: 16, status: 'slow' },
            { productName: '–°–æ—É—Å –ü–µ—Å—Ç–æ', avgStock: 12, dailySales: 0.5, turnoverDays: 24, status: 'very_slow' }
        ];

        const avgTurnover = turnoverData.reduce((sum, item) => sum + item.turnoverDays, 0) / turnoverData.length;

        this.currentReport = {
            type: 'turnover',
            period: `${this.dateRange.from} ‚Äî ${this.dateRange.to}`,
            items: turnoverData,
            avgTurnover: avgTurnover.toFixed(1)
        };

        this.renderTurnoverReport();
    }

    /**
     * –û—Ç—Ä–∏—Å–æ–≤–∫–∞ –æ—Ç—á—ë—Ç–∞ –û–±–æ—Ä–∞—á–∏–≤–∞–µ–º–æ—Å—Ç—å
     */
    renderTurnoverReport() {
        const container = document.getElementById('reportResults');
        if (!container) return;

        const report = this.currentReport;

        const getStatusColor = (status) => {
            switch(status) {
                case 'fast': return '#10b981';
                case 'normal': return '#3b82f6';
                case 'slow': return '#f59e0b';
                case 'very_slow': return '#ef4444';
                default: return '#666';
            }
        };

        const getStatusText = (status) => {
            switch(status) {
                case 'fast': return '–ë—ã—Å—Ç—Ä–∞—è';
                case 'normal': return '–ù–æ—Ä–º–∞–ª—å–Ω–∞—è';
                case 'slow': return '–ú–µ–¥–ª–µ–Ω–Ω–∞—è';
                case 'very_slow': return '–û—á–µ–Ω—å –º–µ–¥–ª–µ–Ω–Ω–∞—è';
                default: return '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
            }
        };

        container.innerHTML = `
            <div class="card">
                <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 1.5rem;">
                    <h2 style="margin: 0; color: #eebc5c;">üì¶ –û–±–æ—Ä–∞—á–∏–≤–∞–µ–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–æ–≤</h2>
                    <button class="btn btn-secondary" onclick="reportsModule.exportReport('turnover')">üì• –≠–∫—Å–ø–æ—Ä—Ç</button>
                </div>

                <div style="background: rgba(59, 130, 246, 0.1); border: 1px solid rgba(59, 130, 246, 0.3); padding: 1rem; border-radius: 8px; margin-bottom: 1.5rem;">
                    <span style="color: #60a5fa;">‚ÑπÔ∏è</span>
                    <div style="color: #F3EADB;">
                        <strong>–ü–µ—Ä–∏–æ–¥:</strong> ${report.period}<br>
                        <strong>–°—Ä–µ–¥–Ω—è—è –æ–±–æ—Ä–∞—á–∏–≤–∞–µ–º–æ—Å—Ç—å:</strong> ${report.avgTurnover} –¥–Ω–µ–π
                    </div>
                </div>

                <!-- –õ–µ–≥–µ–Ω–¥–∞ -->
                <div class="grid grid-4" style="margin-bottom: 2rem;">
                    <div style="background: rgba(16, 185, 129, 0.1); border: 1px solid rgba(16, 185, 129, 0.3); padding: 1rem; border-radius: 8px; text-align: center;">
                        <div style="color: #10b981; font-size: 1.5rem; margin-bottom: 0.5rem;">‚ö°</div>
                        <div style="color: #F3EADB; font-weight: 600;">–ë—ã—Å—Ç—Ä–∞—è</div>
                        <div style="color: #F3EADB; opacity: 0.7; font-size: 0.85em;">&lt; 7 –¥–Ω–µ–π</div>
                    </div>
                    <div style="background: rgba(59, 130, 246, 0.1); border: 1px solid rgba(59, 130, 246, 0.3); padding: 1rem; border-radius: 8px; text-align: center;">
                        <div style="color: #3b82f6; font-size: 1.5rem; margin-bottom: 0.5rem;">‚úì</div>
                        <div style="color: #F3EADB; font-weight: 600;">–ù–æ—Ä–º–∞–ª—å–Ω–∞—è</div>
                        <div style="color: #F3EADB; opacity: 0.7; font-size: 0.85em;">7-14 –¥–Ω–µ–π</div>
                    </div>
                    <div style="background: rgba(245, 158, 11, 0.1); border: 1px solid rgba(245, 158, 11, 0.3); padding: 1rem; border-radius: 8px; text-align: center;">
                        <div style="color: #f59e0b; font-size: 1.5rem; margin-bottom: 0.5rem;">‚ö†Ô∏è</div>
                        <div style="color: #F3EADB; font-weight: 600;">–ú–µ–¥–ª–µ–Ω–Ω–∞—è</div>
                        <div style="color: #F3EADB; opacity: 0.7; font-size: 0.85em;">14-21 –¥–µ–Ω—å</div>
                    </div>
                    <div style="background: rgba(239, 68, 68, 0.1); border: 1px solid rgba(239, 68, 68, 0.3); padding: 1rem; border-radius: 8px; text-align: center;">
                        <div style="color: #ef4444; font-size: 1.5rem; margin-bottom: 0.5rem;">üêå</div>
                        <div style="color: #F3EADB; font-weight: 600;">–û—á–µ–Ω—å –º–µ–¥–ª–µ–Ω–Ω–∞—è</div>
                        <div style="color: #F3EADB; opacity: 0.7; font-size: 0.85em;">&gt; 21 –¥–Ω—è</div>
                    </div>
                </div>

                <!-- –¢–∞–±–ª–∏—Ü–∞ -->
                <table class="table">
                    <thead>
                        <tr>
                            <th>–¢–æ–≤–∞—Ä</th>
                            <th style="text-align: right;">–°—Ä–µ–¥–Ω–∏–π –∑–∞–ø–∞—Å</th>
                            <th style="text-align: right;">–ü—Ä–æ–¥–∞–∂–∏/–¥–µ–Ω—å</th>
                            <th style="text-align: right;">–û–±–æ—Ä–∞—á–∏–≤–∞–µ–º–æ—Å—Ç—å (–¥–Ω–∏)</th>
                            <th style="text-align: center;">–°—Ç–∞—Ç—É—Å</th>
                        </tr>
                    </thead>
                    <tbody>
                        ${report.items.map(item => `
                            <tr>
                                <td><strong>${item.productName}</strong></td>
                                <td style="text-align: right;">${item.avgStock}</td>
                                <td style="text-align: right;">${item.dailySales}</td>
                                <td style="text-align: right; font-weight: 600; color: ${getStatusColor(item.status)};">
                                    ${item.turnoverDays.toFixed(1)}
                                </td>
                                <td style="text-align: center;">
                                    <span class="badge" style="background: ${getStatusColor(item.status)}; color: white;">
                                        ${getStatusText(item.status)}
                                    </span>
                                </td>
                            </tr>
                        `).join('')}
                    </tbody>
                </table>

                <!-- –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ -->
                <div style="background: rgba(245, 158, 11, 0.1); border: 1px solid rgba(245, 158, 11, 0.3); padding: 1.5rem; border-radius: 8px; margin-top: 2rem;">
                    <h3 style="margin: 0 0 1rem 0; color: #eebc5c;">üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:</h3>
                    <ul style="margin: 0; padding-left: 1.5rem; color: #F3EADB;">
                        <li style="margin-bottom: 0.5rem;">–¢–æ–≤–∞—Ä—ã —Å –æ—á–µ–Ω—å –º–µ–¥–ª–µ–Ω–Ω–æ–π –æ–±–æ—Ä–∞—á–∏–≤–∞–µ–º–æ—Å—Ç—å—é —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∑–∞–∫–∞–∑—ã–≤–∞—Ç—å —Ä–µ–∂–µ –∏ –º–µ–Ω—å—à–∏–º–∏ –ø–∞—Ä—Ç–∏—è–º–∏</li>
                        <li style="margin-bottom: 0.5rem;">–ë—ã—Å—Ç—Ä–æ–æ–±–æ—Ä–∞—á–∏–≤–∞–µ–º—ã–µ —Ç–æ–≤–∞—Ä—ã —Ç—Ä–µ–±—É—é—Ç —á–∞—Å—Ç–æ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª—è –æ—Å—Ç–∞—Ç–∫–æ–≤</li>
                        <li>–†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —É–¥–∞–ª–µ–Ω–∏—è –∏–∑ –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç–∞ —Ç–æ–≤–∞—Ä–æ–≤ —Å –æ–±–æ—Ä–∞—á–∏–≤–∞–µ–º–æ—Å—Ç—å—é &gt; 30 –¥–Ω–µ–π</li>
                    </ul>
                </div>
            </div>
        `;
    }

    /**
     * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á—ë—Ç–∞ –ê–ª–∫–æ-–¥–µ–∫–ª–∞—Ä–∞—Ü–∏–∏
     */
    generateAlcoholReport() {
        console.log('üìä Generating Alcohol report...');

        // –î–µ–º–æ-–¥–∞–Ω–Ω—ã–µ –∞–ª–∫–æ–≥–æ–ª—è
        const alcoholData = [
            { 
                name: '–í–æ–¥–∫–∞ "–ë–µ–ª–µ–Ω—å–∫–∞—è" 0.5–ª', 
                code: '4607116540021', 
                volume: 0.5, 
                strength: 40, 
                startBalance: 120, 
                received: 240, 
                sold: 310, 
                writeOff: 2, 
                endBalance: 48,
                category: '–ö—Ä–µ–ø–∫–∏–π –∞–ª–∫–æ–≥–æ–ª—å'
            },
            { 
                name: '–í–∏–Ω–æ "–ú–∞—Å—Å–∞–Ω–¥—Ä–∞" 0.75–ª', 
                code: '4607001234567', 
                volume: 0.75, 
                strength: 12, 
                startBalance: 60, 
                received: 96, 
                sold: 108, 
                writeOff: 0, 
                endBalance: 48,
                category: '–í–∏–Ω–æ'
            },
            { 
                name: '–ü–∏–≤–æ "–ë–∞–ª—Ç–∏–∫–∞ 3" 0.45–ª', 
                code: '4607038100012', 
                volume: 0.45, 
                strength: 4.8, 
                startBalance: 480, 
                received: 960, 
                sold: 1224, 
                writeOff: 12, 
                endBalance: 204,
                category: '–ü–∏–≤–æ'
            }
        ];

        // –†–∞—Å—á—ë—Ç –æ–±—ä—ë–º–æ–≤ –≤ –î–ê–õ (–¥–µ–∫–∞–ª–∏—Ç—Ä–∞—Ö = 10 –ª–∏—Ç—Ä–æ–≤)
        const calculateDAL = (volume, strength, quantity) => {
            return (volume * strength / 100 * quantity) / 10;
        };

        const enrichedData = alcoholData.map(item => ({
            ...item,
            startBalanceDAL: calculateDAL(item.volume, item.strength, item.startBalance),
            receivedDAL: calculateDAL(item.volume, item.strength, item.received),
            soldDAL: calculateDAL(item.volume, item.strength, item.sold),
            writeOffDAL: calculateDAL(item.volume, item.strength, item.writeOff),
            endBalanceDAL: calculateDAL(item.volume, item.strength, item.endBalance)
        }));

        const totalStartDAL = enrichedData.reduce((sum, item) => sum + item.startBalanceDAL, 0);
        const totalReceivedDAL = enrichedData.reduce((sum, item) => sum + item.receivedDAL, 0);
        const totalSoldDAL = enrichedData.reduce((sum, item) => sum + item.soldDAL, 0);
        const totalWriteOffDAL = enrichedData.reduce((sum, item) => sum + item.writeOffDAL, 0);
        const totalEndDAL = enrichedData.reduce((sum, item) => sum + item.endBalanceDAL, 0);

        this.currentReport = {
            type: 'alcohol',
            period: `${this.dateRange.from} ‚Äî ${this.dateRange.to}`,
            items: enrichedData,
            totalStartDAL,
            totalReceivedDAL,
            totalSoldDAL,
            totalWriteOffDAL,
            totalEndDAL
        };

        this.renderAlcoholReport();
    }

    /**
     * –û—Ç—Ä–∏—Å–æ–≤–∫–∞ –æ—Ç—á—ë—Ç–∞ –ê–ª–∫–æ-–¥–µ–∫–ª–∞—Ä–∞—Ü–∏–∏
     */
    renderAlcoholReport() {
        const container = document.getElementById('reportResults');
        if (!container) return;

        const report = this.currentReport;

        container.innerHTML = `
            <div class="card">
                <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 1.5rem;">
                    <h2 style="margin: 0; color: #eebc5c;">üç∑ –ê–ª–∫–æ-–¥–µ–∫–ª–∞—Ä–∞—Ü–∏–∏ (–§–æ—Ä–º—ã 7/8 –§–°–†–ê–†)</h2>
                    <button class="btn btn-secondary" onclick="reportsModule.exportReport('alcohol')">üì• –≠–∫—Å–ø–æ—Ä—Ç –≤ XML</button>
                </div>

                <div style="background: rgba(245, 158, 11, 0.1); border: 1px solid rgba(245, 158, 11, 0.3); padding: 1rem; border-radius: 8px; margin-bottom: 1.5rem;">
                    <span style="color: #fbbf24;">‚ö†Ô∏è</span>
                    <div style="color: #F3EADB;">
                        <strong>–ü–µ—Ä–∏–æ–¥:</strong> ${report.period}<br>
                        <strong>–í–∞–∂–Ω–æ:</strong> –û—Ç—á—ë—Ç —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º–∏ –§–°–†–ê–†
                    </div>
                </div>

                <!-- –°–≤–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ –î–ê–õ -->
                <h3 style="margin-bottom: 1rem; color: #F3EADB;">–°–≤–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ (–≤ –¥–µ–∫–∞–ª–∏—Ç—Ä–∞—Ö –±–µ–∑–≤–æ–¥–Ω–æ–≥–æ —Å–ø–∏—Ä—Ç–∞):</h3>
                <div class="grid grid-5" style="margin-bottom: 2rem;">
                    <div class="stat-card">
                        <div class="stat-value">${report.totalStartDAL.toFixed(2)}</div>
                        <div class="stat-label">–û—Å—Ç–∞—Ç–æ–∫ –Ω–∞ –Ω–∞—á–∞–ª–æ (–î–ê–õ)</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-value" style="color: #10b981;">${report.totalReceivedDAL.toFixed(2)}</div>
                        <div class="stat-label">–ü–æ—Å—Ç—É–ø–∏–ª–æ (–î–ê–õ)</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-value" style="color: #3b82f6;">${report.totalSoldDAL.toFixed(2)}</div>
                        <div class="stat-label">–ü—Ä–æ–¥–∞–Ω–æ (–î–ê–õ)</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-value" style="color: #ef4444;">${report.totalWriteOffDAL.toFixed(2)}</div>
                        <div class="stat-label">–°–ø–∏—Å–∞–Ω–æ (–î–ê–õ)</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-value">${report.totalEndDAL.toFixed(2)}</div>
                        <div class="stat-label">–û—Å—Ç–∞—Ç–æ–∫ –Ω–∞ –∫–æ–Ω–µ—Ü (–î–ê–õ)</div>
                    </div>
                </div>

                <!-- –î–µ—Ç–∞–ª—å–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ -->
                <h3 style="margin-bottom: 1rem; color: #F3EADB;">–î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ —Ç–æ–≤–∞—Ä–∞–º:</h3>
                <table class="table">
                    <thead>
                        <tr>
                            <th>–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ</th>
                            <th>–®—Ç—Ä–∏—Ö–∫–æ–¥</th>
                            <th style="text-align: center;">–ö–∞—Ç–µ–≥–æ—Ä–∏—è</th>
                            <th style="text-align: right;">–ö—Ä–µ–ø–æ—Å—Ç—å %</th>
                            <th style="text-align: right;">–û—Å—Ç–∞—Ç–æ–∫ –Ω–∞—á.</th>
                            <th style="text-align: right;">–ü–æ—Å—Ç—É–ø–∏–ª–æ</th>
                            <th style="text-align: right;">–ü—Ä–æ–¥–∞–Ω–æ</th>
                            <th style="text-align: right;">–°–ø–∏—Å–∞–Ω–æ</th>
                            <th style="text-align: right;">–û—Å—Ç–∞—Ç–æ–∫ –∫–æ–Ω.</th>
                            <th style="text-align: right;">–î–ê–õ –ø—Ä–æ–¥–∞–Ω–æ</th>
                        </tr>
                    </thead>
                    <tbody>
                        ${report.items.map(item => `
                            <tr>
                                <td><strong>${item.name}</strong></td>
                                <td><code style="font-size: 0.85em; color: #60a5fa;">${item.code}</code></td>
                                <td style="text-align: center;">
                                    <span class="badge badge-info">${item.category}</span>
                                </td>
                                <td style="text-align: right;">${item.strength}%</td>
                                <td style="text-align: right;">${item.startBalance}</td>
                                <td style="text-align: right; color: #10b981;">${item.received}</td>
                                <td style="text-align: right; color: #3b82f6;">${item.sold}</td>
                                <td style="text-align: right; color: #ef4444;">${item.writeOff}</td>
                                <td style="text-align: right; font-weight: 600;">${item.endBalance}</td>
                                <td style="text-align: right; font-weight: 600; color: #eebc5c;">${item.soldDAL.toFixed(2)}</td>
                            </tr>
                        `).join('')}
                    </tbody>
                    <tfoot>
                        <tr style="background: rgba(255,255,255,0.05); font-weight: 700;">
                            <td colspan="9" style="text-align: right;">–ò–¢–û–ì–û (–î–ê–õ):</td>
                            <td style="text-align: right; color: #eebc5c;">${report.totalSoldDAL.toFixed(2)}</td>
                        </tr>
                    </tfoot>
                </table>

                <!-- –§–æ—Ä–º—É–ª–∞ –∏ –ø–æ—è—Å–Ω–µ–Ω–∏—è -->
                <div style="background: rgba(59, 130, 246, 0.1); border: 1px solid rgba(59, 130, 246, 0.3); padding: 1.5rem; border-radius: 8px; margin-top: 2rem;">
                    <h3 style="margin: 0 0 1rem 0; color: #60a5fa;">üìê –§–æ—Ä–º—É–ª–∞ —Ä–∞—Å—á—ë—Ç–∞ –î–ê–õ:</h3>
                    <code style="display: block; padding: 1rem; background: rgba(0,0,0,0.2); border-radius: 8px; color: #F3EADB; margin-bottom: 1rem;">
                        –î–ê–õ = (–û–±—ä—ë–º –≤ –ª–∏—Ç—Ä–∞—Ö √ó –ö—Ä–µ–ø–æ—Å—Ç—å % √∑ 100 √ó –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ) √∑ 10
                    </code>
                    <p style="color: #F3EADB; margin: 0;">
                        <strong>–ü—Ä–∏–º–µ—Ä:</strong> 100 –±—É—Ç—ã–ª–æ–∫ –≤–æ–¥–∫–∏ 0.5–ª 40% = (0.5 √ó 40 √∑ 100 √ó 100) √∑ 10 = 2 –î–ê–õ
                    </p>
                </div>

                <!-- –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ–æ—Ä–º–∞—Ö -->
                <div style="background: rgba(245, 158, 11, 0.1); border: 1px solid rgba(245, 158, 11, 0.3); padding: 1.5rem; border-radius: 8px; margin-top: 1.5rem;">
                    <h3 style="margin: 0 0 1rem 0; color: #eebc5c;">üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ–æ—Ä–º–∞—Ö –§–°–†–ê–†:</h3>
                    <ul style="margin: 0; padding-left: 1.5rem; color: #F3EADB;">
                        <li style="margin-bottom: 0.5rem;"><strong>–§–æ—Ä–º–∞ 7:</strong> –î–µ–∫–ª–∞—Ä–∞—Ü–∏—è –æ–± –æ–±—ä—ë–º–µ —Ä–æ–∑–Ω–∏—á–Ω–æ–π –ø—Ä–æ–¥–∞–∂–∏ –∞–ª–∫–æ–≥–æ–ª—å–Ω–æ–π –∏ —Å–ø–∏—Ä—Ç–æ—Å–æ–¥–µ—Ä–∂–∞—â–µ–π –ø—Ä–æ–¥—É–∫—Ü–∏–∏</li>
                        <li style="margin-bottom: 0.5rem;"><strong>–§–æ—Ä–º–∞ 8:</strong> –°–ø—Ä–∞–≤–∫–∞ –æ–± –æ–±—ä—ë–º–µ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è –∏ –æ—Å—Ç–∞—Ç–∫–æ–≤ –∞–ª–∫–æ–≥–æ–ª—å–Ω–æ–π –ø—Ä–æ–¥—É–∫—Ü–∏–∏</li>
                        <li>–û—Ç—á—ë—Ç—ã –ø–æ–¥–∞—é—Ç—Å—è –µ–∂–µ–º–µ—Å—è—á–Ω–æ –¥–æ 20-–≥–æ —á–∏—Å–ª–∞ —Å–ª–µ–¥—É—é—â–µ–≥–æ –º–µ—Å—è—Ü–∞</li>
                    </ul>
                </div>
            </div>
        `;
    }

    /**
     * –≠–∫—Å–ø–æ—Ä—Ç –æ—Ç—á—ë—Ç–∞
     */
    exportReport(type) {
        if (!this.currentReport) {
            alert('‚ö†Ô∏è –°–Ω–∞—á–∞–ª–∞ —Å–≥–µ–Ω–µ—Ä–∏—Ä—É–π—Ç–µ –æ—Ç—á—ë—Ç');
            return;
        }

        console.log(`üì• Exporting ${type} report...`);

        // –í —Ä–µ–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ ‚Äî —ç–∫—Å–ø–æ—Ä—Ç –≤ Excel/PDF
        const dataStr = JSON.stringify(this.currentReport, null, 2);
        const blob = new Blob([dataStr], { type: 'application/json' });
        const url = URL.createObjectURL(blob);
        const link = document.createElement('a');
        link.href = url;
        link.download = `${type}_report_${new Date().toISOString().split('T')[0]}.json`;
        link.click();

        this.showNotification('‚úÖ –û—Ç—á—ë—Ç —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω!', 'success');
    }

    /**
     * –ü–æ–∫–∞–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
     */
    showNotification(message, type = 'info') {
        const notification = document.createElement('div');
        notification.style.cssText = `
            position: fixed;
            top: 20px;
            right: 20px;
            z-index: 10001;
            padding: 1rem 1.5rem;
            border-radius: 8px;
            color: white;
            font-weight: 600;
            box-shadow: 0 4px 12px rgba(0,0,0,0.2);
            animation: slideIn 0.3s ease-out;
            ${type === 'success' ? 'background: #16a34a;' : ''}
            ${type === 'error' ? 'background: #dc2626;' : ''}
            ${type === 'info' ? 'background: #2563eb;' : ''}
        `;
        notification.textContent = message;

        document.body.appendChild(notification);

        setTimeout(() => {
            notification.style.animation = 'slideIn 0.3s ease-out reverse';
            setTimeout(() => notification.remove(), 300);
        }, 3000);
    }
}

// Export
if (typeof module !== 'undefined' && module.exports) {
    module.exports = ReportsModule;
}

