/**
 * DANDY Inventory ‚Äî –ú–æ–¥—É–ª—å –ï–ì–ê–ò–°
 * –£—á—ë—Ç –∞–ª–∫–æ–≥–æ–ª—å–Ω–æ–π –ø—Ä–æ–¥—É–∫—Ü–∏–∏, –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –£–¢–ú
 */

class EGAISModule {
    constructor(inventorySystem) {
        this.system = inventorySystem;
        this.operations = this.loadOperations();
        this.utmStatus = 'connected'; // connected, disconnected, error
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥—É–ª—è
     */
    init() {
        console.log('üç∑ EGAIS module initialized');
        this.renderOperations();
        this.renderAlcoholStock();
        this.updateUTMStatus();
    }

    /**
     * –ó–∞–≥—Ä—É–∑–∫–∞ –æ–ø–µ—Ä–∞—Ü–∏–π
     */
    loadOperations() {
        const saved = this.system.loadFromLocalStorage('egaisOperations');
        return saved || [
            {
                id: 1,
                dateTime: '2024-01-15T14:30:00',
                operationType: 'sale',
                documentNumber: 'ACT-00456',
                status: 'confirmed',
                error: null
            },
            {
                id: 2,
                dateTime: '2024-01-15T12:15:00',
                operationType: 'arrival',
                documentNumber: 'TTN-00123',
                status: 'posted',
                error: null
            },
            {
                id: 3,
                dateTime: '2024-01-15T10:45:00',
                operationType: 'writeoff',
                documentNumber: 'ACT-00455',
                status: 'pending',
                error: null
            }
        ];
    }

    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –£–¢–ú
     */
    updateUTMStatus() {
        const statusElement = document.getElementById('utmStatus');
        if (!statusElement) return;

        const statusBadge = this.utmStatus === 'connected' 
            ? '<span class="badge badge-success">–ü–æ–¥–∫–ª—é—á–µ–Ω</span>'
            : '<span class="badge badge-danger">–û—Ç–∫–ª—é—á–µ–Ω</span>';

        statusElement.innerHTML = statusBadge;
    }

    /**
     * –û—Ç—Ä–∏—Å–æ–≤–∫–∞ –æ—Å—Ç–∞—Ç–∫–æ–≤ –∞–ª–∫–æ–≥–æ–ª—è
     */
    renderAlcoholStock() {
        const container = document.getElementById('alcoholStockContainer');
        if (!container) return;

        // –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –∞–ª–∫–æ–≥–æ–ª—å
        const alcoholProducts = this.system.products.filter(p => p.isAlcohol);
        
        // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ —Ç–∏–ø—É
        const spirits = alcoholProducts.filter(p => p.alcoholStrength > 15); // –∫—Ä–µ–ø–∫–∏–π
        const beer = alcoholProducts.filter(p => p.alcoholStrength <= 15); // –ø–∏–≤–æ

        const spiritsVolume = spirits.reduce((sum, p) => sum + (p.currentStock || 0), 0);
        const beerBottles = beer.reduce((sum, p) => sum + (p.currentStock || 0), 0);

        container.innerHTML = `
            <table class="table">
                <tr>
                    <td><strong>–ö—Ä–µ–ø–∫–∏–π –∞–ª–∫–æ–≥–æ–ª—å</strong></td>
                    <td style="text-align: right;">${spiritsVolume.toFixed(1)} –ª</td>
                </tr>
                <tr>
                    <td><strong>–ü–∏–≤–æ (–±—É—Ç—ã–ª–∫–∏)</strong></td>
                    <td style="text-align: right;">${beerBottles} —à—Ç</td>
                </tr>
                <tr>
                    <td><strong>–ü–∏–≤–æ (–∫–µ–≥–∏)</strong></td>
                    <td style="text-align: right;">3 —à—Ç (110 –ª)</td>
                </tr>
            </table>
        `;
    }

    /**
     * –û—Ç—Ä–∏—Å–æ–≤–∫–∞ –∂—É—Ä–Ω–∞–ª–∞ –æ–ø–µ—Ä–∞—Ü–∏–π
     */
    renderOperations() {
        const tbody = document.querySelector('#egaisOperationsBody');
        if (!tbody) return;

        if (this.operations.length === 0) {
            tbody.innerHTML = `
                <tr>
                    <td colspan="5" style="text-align: center; padding: 2rem; color: #999;">
                        –û–ø–µ—Ä–∞—Ü–∏–π –ø–æ–∫–∞ –Ω–µ—Ç
                    </td>
                </tr>
            `;
            return;
        }

        tbody.innerHTML = this.operations.map(op => {
            const statusBadge = this.getStatusBadge(op.status);
            const operationLabel = this.getOperationLabel(op.operationType);

            return `
                <tr>
                    <td>${new Date(op.dateTime).toLocaleString('ru-RU')}</td>
                    <td>${operationLabel}</td>
                    <td><code>${op.documentNumber}</code></td>
                    <td>${statusBadge}</td>
                    <td>${op.error || '‚Äî'}</td>
                </tr>
            `;
        }).join('');
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ –±–µ–π–¥–∂–∞ —Å—Ç–∞—Ç—É—Å–∞
     */
    getStatusBadge(status) {
        const badges = {
            'pending': '<span class="badge badge-warning">–û–∂–∏–¥–∞–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏</span>',
            'sent': '<span class="badge badge-info">–û—Ç–ø—Ä–∞–≤–ª–µ–Ω</span>',
            'confirmed': '<span class="badge badge-success">–ü–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω</span>',
            'posted': '<span class="badge badge-success">–ü—Ä–æ–≤–µ–¥—ë–Ω</span>',
            'rejected': '<span class="badge badge-danger">–û—Ç–∫–ª–æ–Ω—ë–Ω</span>',
            'error': '<span class="badge badge-danger">–û—à–∏–±–∫–∞</span>'
        };
        return badges[status] || status;
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–∏
     */
    getOperationLabel(operationType) {
        const labels = {
            'arrival': '–ü—Ä–∏—Ö–æ–¥ –¢–¢–ù',
            'sale': '–ê–∫—Ç —Å–ø–∏—Å–∞–Ω–∏—è (—Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è)',
            'writeoff': '–ê–∫—Ç –ø–æ—Ä—á–∏',
            'return': '–í–æ–∑–≤—Ä–∞—Ç –ø–æ—Å—Ç–∞–≤—â–∏–∫—É',
            'transfer': '–ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ'
        };
        return labels[operationType] || operationType;
    }

    /**
     * –ü—Ä–∏—ë–º –¢–¢–ù
     */
    acceptTTN() {
        const modal = document.createElement('div');
        modal.className = 'modal-overlay';
        modal.style.cssText = `
            position: fixed; top: 0; left: 0; right: 0; bottom: 0;
            background: rgba(0,0,0,0.7); display: flex; align-items: center;
            justify-content: center; z-index: 10000;
        `;

        modal.innerHTML = `
            <div style="background: #094a45; color: #F3EADB; border: 1px solid rgba(255,255,255,0.12); border-radius: 16px; padding: 2rem; max-width: 600px; width: 90%; max-height: 90vh; overflow-y: auto;">
                <h2 style="margin: 0 0 1.5rem 0; color: #eebc5c;">üì• –ü—Ä–∏—ë–º –¢–¢–ù –ï–ì–ê–ò–°</h2>

                <div class="alert alert-info">
                    <span>‚ÑπÔ∏è</span>
                    <div>
                        <strong>–í–Ω–∏–º–∞–Ω–∏–µ!</strong><br>
                        –ü—Ä–∏—ë–º –∞–ª–∫–æ–≥–æ–ª—å–Ω–æ–π –ø—Ä–æ–¥—É–∫—Ü–∏–∏ –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø–æ –¢–¢–ù –∏–∑ –ï–ì–ê–ò–°.
                        –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –£–¢–ú –ø–æ–¥–∫–ª—é—á—ë–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç.
                    </div>
                </div>

                <div class="form-group">
                    <label class="form-label">–ù–æ–º–µ—Ä –¢–¢–ù –ï–ì–ê–ò–°*</label>
                    <input type="text" class="form-input" id="ttnNumber" placeholder="000000000000">
                </div>

                <div class="form-group">
                    <label class="form-label">–î–∞—Ç–∞ –¢–¢–ù*</label>
                    <input type="date" class="form-input" id="ttnDate" value="${new Date().toISOString().split('T')[0]}">
                </div>

                <div class="form-group">
                    <label class="form-label">–ü–æ—Å—Ç–∞–≤—â–∏–∫</label>
                    <input type="text" class="form-input" id="ttnSupplier" placeholder="–û–û–û –ê–ª–∫–æ-–ü–æ—Å—Ç–∞–≤—â–∏–∫">
                </div>

                <div class="form-group">
                    <label class="form-label">–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π</label>
                    <textarea class="form-input" id="ttnComment" rows="3" placeholder="–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è..."></textarea>
                </div>

                <div style="background: rgba(245, 158, 11, 0.1); border: 1px solid rgba(245, 158, 11, 0.3); color: #F3EADB; padding: 1rem; border-radius: 8px; margin-bottom: 1.5rem; border-left: 4px solid #f59e0b;">
                    <strong>‚ö†Ô∏è –í–∞–∂–Ω–æ:</strong><br>
                    –ü–æ—Å–ª–µ –ø—Ä–∏—ë–º–∞ –¢–¢–ù —Å–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏:
                    <ul style="margin: 0.5rem 0 0 1.5rem;">
                        <li>–ó–∞–ø—Ä–æ—Å–∏—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ –£–¢–ú</li>
                        <li>–°–≤–µ—Ä–∏—Ç —Ñ–∞–∫—Ç —Å –¥–æ–∫—É–º–µ–Ω—Ç–æ–º</li>
                        <li>–ü–æ—Å—Ç–∞–≤–∏—Ç –Ω–∞ –±–∞–ª–∞–Ω—Å —Å –ø–∞—Ä—Ç–∏—è–º–∏/–∫–µ–≥–∞–º–∏</li>
                        <li>–û—Ç–ø—Ä–∞–≤–∏—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –≤ –ï–ì–ê–ò–°</li>
                    </ul>
                </div>

                <div style="display: flex; gap: 1rem;">
                    <button onclick="egaisModule.saveTTN()" class="btn btn-primary">
                        ‚úÖ –ü—Ä–∏–Ω—è—Ç—å –¢–¢–ù
                    </button>
                    <button onclick="this.closest('.modal-overlay').remove()" class="btn btn-secondary">
                        –û—Ç–º–µ–Ω–∞
                    </button>
                </div>
            </div>
        `;

        document.body.appendChild(modal);
    }

    /**
     * –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¢–¢–ù
     */
    saveTTN() {
        const ttnNumber = document.getElementById('ttnNumber').value.trim();
        const ttnDate = document.getElementById('ttnDate').value;
        const supplier = document.getElementById('ttnSupplier').value.trim();
        const comment = document.getElementById('ttnComment').value.trim();

        if (!ttnNumber || !ttnDate) {
            alert('‚ö†Ô∏è –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è');
            return;
        }

        // –°–æ–∑–¥–∞—ë–º –æ–ø–µ—Ä–∞—Ü–∏—é
        const operation = {
            id: Date.now(),
            dateTime: new Date().toISOString(),
            operationType: 'arrival',
            documentNumber: ttnNumber,
            status: 'pending',
            supplier,
            comment,
            error: null
        };

        this.operations.unshift(operation);
        this.system.saveToLocalStorage('egaisOperations', this.operations);

        // –ò–º–∏—Ç–∞—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ –£–¢–ú
        setTimeout(() => {
            operation.status = 'sent';
            this.renderOperations();
            console.log('üì§ –¢–¢–ù –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ –£–¢–ú');

            setTimeout(() => {
                operation.status = 'confirmed';
                this.renderOperations();
                console.log('‚úÖ –¢–¢–ù –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω –ï–ì–ê–ò–°');
                this.showNotification(`‚úÖ –¢–¢–ù ${ttnNumber} —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–Ω—è—Ç!`, 'success');
            }, 2000);
        }, 1000);

        // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª–∫—É
        document.querySelector('.modal-overlay').remove();

        // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫
        this.renderOperations();

        this.showNotification('üì§ –¢–¢–ù –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ –£–¢–ú...', 'info');
    }

    /**
     * –°–æ–∑–¥–∞–Ω–∏–µ –∞–∫—Ç–∞ —Å–ø–∏—Å–∞–Ω–∏—è
     */
    createWriteoffAct() {
        const modal = document.createElement('div');
        modal.className = 'modal-overlay';
        modal.style.cssText = `
            position: fixed; top: 0; left: 0; right: 0; bottom: 0;
            background: rgba(0,0,0,0.7); display: flex; align-items: center;
            justify-content: center; z-index: 10000;
        `;

        const alcoholProducts = this.system.products.filter(p => p.isAlcohol);

        modal.innerHTML = `
            <div style="background: #094a45; color: #F3EADB; border: 1px solid rgba(255,255,255,0.12); border-radius: 16px; padding: 2rem; max-width: 600px; width: 90%; max-height: 90vh; overflow-y: auto;">
                <h2 style="margin: 0 0 1.5rem 0; color: #eebc5c;">üìã –ê–∫—Ç —Å–ø–∏—Å–∞–Ω–∏—è –ï–ì–ê–ò–°</h2>

                <div class="form-group">
                    <label class="form-label">–¢–∏–ø –æ–ø–µ—Ä–∞—Ü–∏–∏*</label>
                    <select class="form-select" id="writeoffType">
                        <option value="sale">–†–µ–∞–ª–∏–∑–∞—Ü–∏—è (–ø—Ä–æ–¥–∞–∂–∞)</option>
                        <option value="writeoff">–ü–æ—Ä—á–∞/–ë—Ä–∞–∫</option>
                        <option value="loss">–£—Ç–µ—Ä—è</option>
                        <option value="spill">–ü—Ä–æ–ª–∏–≤ (—Ç–µ—Ö–ø–æ—Ç–µ—Ä–∏)</option>
                    </select>
                </div>

                <div class="form-group">
                    <label class="form-label">–î–∞—Ç–∞*</label>
                    <input type="date" class="form-input" id="writeoffDate" value="${new Date().toISOString().split('T')[0]}">
                </div>

                <div class="form-group">
                    <label class="form-label">–¢–æ–≤–∞—Ä*</label>
                    <select class="form-select" id="writeoffProduct">
                        <option value="">–í—ã–±–µ—Ä–∏—Ç–µ...</option>
                        ${alcoholProducts.map(p => `
                            <option value="${p.id}">${p.name} (${p.alcoholStrength}%)</option>
                        `).join('')}
                    </select>
                </div>

                <div class="form-group">
                    <label class="form-label">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ (–ª)*</label>
                    <input type="number" class="form-input" id="writeoffQuantity" value="0" step="0.001">
                </div>

                <div class="form-group">
                    <label class="form-label">–ü—Ä–∏—á–∏–Ω–∞</label>
                    <textarea class="form-input" id="writeoffReason" rows="3" placeholder="–£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É —Å–ø–∏—Å–∞–Ω–∏—è..."></textarea>
                </div>

                <div style="display: flex; gap: 1rem; margin-top: 1.5rem;">
                    <button onclick="egaisModule.saveWriteoffAct()" class="btn btn-primary">
                        üì§ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ –ï–ì–ê–ò–°
                    </button>
                    <button onclick="this.closest('.modal-overlay').remove()" class="btn btn-secondary">
                        –û—Ç–º–µ–Ω–∞
                    </button>
                </div>
            </div>
        `;

        document.body.appendChild(modal);
    }

    /**
     * –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∞–∫—Ç–∞ —Å–ø–∏—Å–∞–Ω–∏—è
     */
    saveWriteoffAct() {
        const writeoffType = document.getElementById('writeoffType').value;
        const writeoffDate = document.getElementById('writeoffDate').value;
        const productId = parseInt(document.getElementById('writeoffProduct').value);
        const quantity = parseFloat(document.getElementById('writeoffQuantity').value);
        const reason = document.getElementById('writeoffReason').value.trim();

        if (!writeoffDate || !productId || quantity <= 0) {
            alert('‚ö†Ô∏è –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è');
            return;
        }

        const product = this.system.products.find(p => p.id === productId);
        if (!product) return;

        // –°–æ–∑–¥–∞—ë–º –æ–ø–µ—Ä–∞—Ü–∏—é
        const operation = {
            id: Date.now(),
            dateTime: new Date().toISOString(),
            operationType: writeoffType,
            documentNumber: `ACT-${Date.now()}`,
            status: 'pending',
            productId,
            productName: product.name,
            quantity,
            reason,
            error: null
        };

        this.operations.unshift(operation);
        this.system.saveToLocalStorage('egaisOperations', this.operations);

        // –ò–º–∏—Ç–∞—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ –£–¢–ú
        setTimeout(() => {
            operation.status = 'sent';
            this.renderOperations();
            console.log('üì§ –ê–∫—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ –£–¢–ú');

            setTimeout(() => {
                operation.status = 'confirmed';
                this.renderOperations();
                console.log('‚úÖ –ê–∫—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω –ï–ì–ê–ò–°');
                this.showNotification(`‚úÖ –ê–∫—Ç ${operation.documentNumber} –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω!`, 'success');
            }, 2000);
        }, 1000);

        // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª–∫—É
        document.querySelector('.modal-overlay').remove();

        // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫
        this.renderOperations();

        this.showNotification('üì§ –ê–∫—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ –£–¢–ú...', 'info');
    }

    /**
     * –í–æ–∑–≤—Ä–∞—Ç –ø–æ—Å—Ç–∞–≤—â–∏–∫—É
     */
    createReturnAct() {
        const modal = document.createElement('div');
        modal.className = 'modal-overlay';
        modal.style.cssText = `
            position: fixed; top: 0; left: 0; right: 0; bottom: 0;
            background: rgba(0,0,0,0.7); display: flex; align-items: center;
            justify-content: center; z-index: 10000;
        `;

        const alcoholProducts = this.system.products.filter(p => p.isAlcohol);

        modal.innerHTML = `
            <div style="background: #094a45; color: #F3EADB; border: 1px solid rgba(255,255,255,0.12); border-radius: 16px; padding: 2rem; max-width: 600px; width: 90%; max-height: 90vh; overflow-y: auto;">
                <h2 style="margin: 0 0 1.5rem 0; color: #eebc5c;">‚Ü©Ô∏è –í–æ–∑–≤—Ä–∞—Ç –ø–æ—Å—Ç–∞–≤—â–∏–∫—É</h2>

                <div class="alert alert-warning">
                    <span>‚ö†Ô∏è</span>
                    <div>
                        <strong>–í–Ω–∏–º–∞–Ω–∏–µ!</strong><br>
                        –í–æ–∑–≤—Ä–∞—Ç –∞–ª–∫–æ–≥–æ–ª—å–Ω–æ–π –ø—Ä–æ–¥—É–∫—Ü–∏–∏ –≤–æ–∑–º–æ–∂–µ–Ω —Ç–æ–ª—å–∫–æ —Å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ–º —á–µ—Ä–µ–∑ –ï–ì–ê–ò–°.
                    </div>
                </div>

                <div class="form-group">
                    <label class="form-label">–û—Å–Ω–æ–≤–∞–Ω–∏–µ –≤–æ–∑–≤—Ä–∞—Ç–∞*</label>
                    <select class="form-select" id="returnReason">
                        <option value="defect">–ë—Ä–∞–∫/–ù–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ</option>
                        <option value="expired">–ü—Ä–æ—Å—Ä–æ—á–µ–Ω —Å—Ä–æ–∫ –≥–æ–¥–Ω–æ—Å—Ç–∏</option>
                        <option value="damaged">–ü–æ–≤—Ä–µ–∂–¥—ë–Ω–Ω–∞—è —É–ø–∞–∫–æ–≤–∫–∞</option>
                        <option value="other">–î—Ä—É–≥–æ–µ</option>
                    </select>
                </div>

                <div class="form-group">
                    <label class="form-label">–ü–æ—Å—Ç–∞–≤—â–∏–∫*</label>
                    <input type="text" class="form-input" id="returnSupplier" placeholder="–û–û–û –ê–ª–∫–æ-–ü–æ—Å—Ç–∞–≤—â–∏–∫">
                </div>

                <div class="form-group">
                    <label class="form-label">–¢–æ–≤–∞—Ä*</label>
                    <select class="form-select" id="returnProduct">
                        <option value="">–í—ã–±–µ—Ä–∏—Ç–µ...</option>
                        ${alcoholProducts.map(p => `
                            <option value="${p.id}">${p.name}</option>
                        `).join('')}
                    </select>
                </div>

                <div class="form-group">
                    <label class="form-label">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ*</label>
                    <input type="number" class="form-input" id="returnQuantity" value="0" step="1">
                </div>

                <div class="form-group">
                    <label class="form-label">–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π</label>
                    <textarea class="form-input" id="returnComment" rows="3"></textarea>
                </div>

                <div style="display: flex; gap: 1rem; margin-top: 1.5rem;">
                    <button onclick="egaisModule.saveReturnAct()" class="btn btn-primary">
                        üì§ –°–æ–∑–¥–∞—Ç—å –≤–æ–∑–≤—Ä–∞—Ç
                    </button>
                    <button onclick="this.closest('.modal-overlay').remove()" class="btn btn-secondary">
                        –û—Ç–º–µ–Ω–∞
                    </button>
                </div>
            </div>
        `;

        document.body.appendChild(modal);
    }

    /**
     * –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤–æ–∑–≤—Ä–∞—Ç–∞
     */
    saveReturnAct() {
        const reason = document.getElementById('returnReason').value;
        const supplier = document.getElementById('returnSupplier').value.trim();
        const productId = parseInt(document.getElementById('returnProduct').value);
        const quantity = parseFloat(document.getElementById('returnQuantity').value);
        const comment = document.getElementById('returnComment').value.trim();

        if (!supplier || !productId || quantity <= 0) {
            alert('‚ö†Ô∏è –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è');
            return;
        }

        const product = this.system.products.find(p => p.id === productId);
        if (!product) return;

        // –°–æ–∑–¥–∞—ë–º –æ–ø–µ—Ä–∞—Ü–∏—é
        const operation = {
            id: Date.now(),
            dateTime: new Date().toISOString(),
            operationType: 'return',
            documentNumber: `RTN-${Date.now()}`,
            status: 'pending',
            productId,
            productName: product.name,
            quantity,
            supplier,
            reason,
            comment,
            error: null
        };

        this.operations.unshift(operation);
        this.system.saveToLocalStorage('egaisOperations', this.operations);

        // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª–∫—É
        document.querySelector('.modal-overlay').remove();

        // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫
        this.renderOperations();

        this.showNotification('üì§ –í–æ–∑–≤—Ä–∞—Ç —Å–æ–∑–¥–∞–Ω –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ –£–¢–ú', 'success');
    }

    /**
     * –°–≤–µ—Ä–∫–∞ –æ—Å—Ç–∞—Ç–∫–æ–≤ —Å –ï–ì–ê–ò–°
     */
    syncWithEGAIS() {
        const modal = document.createElement('div');
        modal.className = 'modal-overlay';
        modal.style.cssText = `
            position: fixed; top: 0; left: 0; right: 0; bottom: 0;
            background: rgba(0,0,0,0.7); display: flex; align-items: center;
            justify-content: center; z-index: 10000;
        `;

        modal.innerHTML = `
            <div style="background: #094a45; color: #F3EADB; border: 1px solid rgba(255,255,255,0.12); border-radius: 16px; padding: 2rem; max-width: 700px; width: 90%;">
                <h2 style="margin: 0 0 1.5rem 0; color: #eebc5c;">üîÑ –°–≤–µ—Ä–∫–∞ –æ—Å—Ç–∞—Ç–∫–æ–≤ —Å –ï–ì–ê–ò–°</h2>

                <div style="text-align: center; padding: 2rem;">
                    <div style="font-size: 3rem; margin-bottom: 1rem;">‚è≥</div>
                    <p style="font-size: 1.1em; color: #666;">
                        –ó–∞–ø—Ä–æ—Å –æ—Å—Ç–∞—Ç–∫–æ–≤ –∏–∑ –ï–ì–ê–ò–°...<br>
                        –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥.
                    </p>
                </div>

                <div style="display: flex; justify-content: center; gap: 1rem;">
                    <button onclick="this.closest('.modal-overlay').remove()" class="btn btn-secondary">
                        –û—Ç–º–µ–Ω–∞
                    </button>
                </div>
            </div>
        `;

        document.body.appendChild(modal);

        // –ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–ø—Ä–æ—Å–∞
        setTimeout(() => {
            modal.remove();
            this.showSyncResults();
        }, 2000);
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–≤–µ—Ä–∫–∏
     */
    showSyncResults() {
        const modal = document.createElement('div');
        modal.className = 'modal-overlay';
        modal.style.cssText = `
            position: fixed; top: 0; left: 0; right: 0; bottom: 0;
            background: rgba(0,0,0,0.7); display: flex; align-items: center;
            justify-content: center; z-index: 10000;
        `;

        modal.innerHTML = `
            <div style="background: #094a45; color: #F3EADB; border: 1px solid rgba(255,255,255,0.12); border-radius: 16px; padding: 2rem; max-width: 800px; width: 90%; max-height: 90vh; overflow-y: auto;">
                <h2 style="margin: 0 0 1.5rem 0; color: #eebc5c;">‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–≤–µ—Ä–∫–∏</h2>

                <div class="alert alert-info">
                    <span>‚ÑπÔ∏è</span>
                    <div>
                        –°–≤–µ—Ä–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞: ${new Date().toLocaleString('ru-RU')}<br>
                        –†–∞—Å—Ö–æ–∂–¥–µ–Ω–∏–π: <strong>0</strong>
                    </div>
                </div>

                <table class="table">
                    <thead>
                        <tr>
                            <th>–¢–æ–≤–∞—Ä</th>
                            <th>–ü–æ —É—á—ë—Ç—É</th>
                            <th>–í –ï–ì–ê–ò–°</th>
                            <th>–†–∞—Å—Ö–æ–∂–¥–µ–Ω–∏–µ</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>–í–æ–¥–∫–∞ "–†—É—Å—Å–∫–∏–π –°—Ç–∞–Ω–¥–∞—Ä—Ç" 0.5–ª</td>
                            <td>12 —à—Ç</td>
                            <td>12 —à—Ç</td>
                            <td><span class="badge badge-success">‚úì –°–æ–≤–ø–∞–¥–∞–µ—Ç</span></td>
                        </tr>
                        <tr>
                            <td>–ü–∏–≤–æ —Å–≤–µ—Ç–ª–æ–µ (–∫–µ–≥–∞ 50–ª)</td>
                            <td>28.5 –ª</td>
                            <td>28.5 –ª</td>
                            <td><span class="badge badge-success">‚úì –°–æ–≤–ø–∞–¥–∞–µ—Ç</span></td>
                        </tr>
                    </tbody>
                </table>

                <div style="display: flex; justify-content: center; margin-top: 1.5rem;">
                    <button onclick="this.closest('.modal-overlay').remove()" class="btn btn-primary">
                        –ó–∞–∫—Ä—ã—Ç—å
                    </button>
                </div>
            </div>
        `;

        document.body.appendChild(modal);
    }

    /**
     * –ü–æ–∫–∞–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
     */
    showNotification(message, type = 'info') {
        const notification = document.createElement('div');
        notification.style.cssText = `
            position: fixed;
            top: 20px;
            right: 20px;
            z-index: 10001;
            padding: 1rem 1.5rem;
            border-radius: 8px;
            color: white;
            font-weight: 600;
            box-shadow: 0 4px 12px rgba(0,0,0,0.2);
            animation: slideIn 0.3s ease-out;
            ${type === 'success' ? 'background: #16a34a;' : ''}
            ${type === 'error' ? 'background: #dc2626;' : ''}
            ${type === 'info' ? 'background: #2563eb;' : ''}
        `;
        notification.textContent = message;

        document.body.appendChild(notification);

        setTimeout(() => {
            notification.style.animation = 'slideIn 0.3s ease-out reverse';
            setTimeout(() => notification.remove(), 300);
        }, 3000);
    }
}

// Export
if (typeof module !== 'undefined' && module.exports) {
    module.exports = EGAISModule;
}

