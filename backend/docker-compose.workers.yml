version: '3.8'

services:
  # Message Workers
  message-workers:
    build: .
    container_name: dandy-message-workers
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://dandy_user:dandy_password@postgres:5432/dandy_pos
      REDIS_URL: redis://redis:6379
      RABBITMQ_URL: amqp://dandy_user:dandy_password@rabbitmq:5672
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
    depends_on:
      - postgres
      - redis
      - rabbitmq
    volumes:
      - ./src:/app/src
    command: npm run workers
    networks:
      - dandy-network
    restart: unless-stopped

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: dandy-postgres
    environment:
      POSTGRES_DB: dandy_pos
      POSTGRES_USER: dandy_user
      POSTGRES_PASSWORD: dandy_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - dandy-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: dandy-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - dandy-network

  # RabbitMQ Message Queue
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: dandy-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: dandy_user
      RABBITMQ_DEFAULT_PASS: dandy_password
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - dandy-network

volumes:
  postgres_data:
  redis_data:
  rabbitmq_data:

networks:
  dandy-network:
    driver: bridge
