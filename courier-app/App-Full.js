import React, { useEffect } from 'react';
import { NavigationContainer } from '@react-navigation/native';
import { createStackNavigator } from '@react-navigation/stack';
import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';
import { Platform, PermissionsAndroid } from 'react-native';
import PushNotification from 'react-native-push-notification';
import messaging from '@react-native-firebase/messaging';

// Screens
import LoginScreen from './src/screens/LoginScreen';
import HomeScreen from './src/screens/HomeScreen-Enhanced';
import OrderDetailScreen from './src/screens/OrderDetailScreen-Enhanced';
import MapScreen from './src/screens/MapScreen';
import HistoryScreen from './src/screens/HistoryScreen';
import ProfileScreen from './src/screens/ProfileScreen';

const Stack = createStackNavigator();
const Tab = createBottomTabNavigator();

// –ì–ª–∞–≤–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è —Å —Ç–∞–±–∞–º–∏
function MainTabs() {
  return (
    <Tab.Navigator
      screenOptions={{
        headerShown: false,
        tabBarActiveTintColor: '#0b5c3b',
        tabBarInactiveTintColor: '#6b7280',
        tabBarStyle: {
          backgroundColor: '#fff',
          borderTopWidth: 1,
          borderTopColor: '#e5e7eb',
          height: 60,
          paddingBottom: 8,
          paddingTop: 8,
        },
        tabBarLabelStyle: {
          fontSize: 12,
          fontWeight: '600',
        },
      }}
    >
      <Tab.Screen
        name="Home"
        component={HomeScreen}
        options={{
          tabBarLabel: '–ó–∞–∫–∞–∑—ã',
          tabBarIcon: ({ color }) => <Text style={{ fontSize: 24 }}>üì¶</Text>,
        }}
      />
      <Tab.Screen
        name="Map"
        component={MapScreen}
        options={{
          tabBarLabel: '–ö–∞—Ä—Ç–∞',
          tabBarIcon: ({ color }) => <Text style={{ fontSize: 24 }}>üó∫</Text>,
        }}
      />
      <Tab.Screen
        name="History"
        component={HistoryScreen}
        options={{
          tabBarLabel: '–ò—Å—Ç–æ—Ä–∏—è',
          tabBarIcon: ({ color }) => <Text style={{ fontSize: 24 }}>üìä</Text>,
        }}
      />
      <Tab.Screen
        name="Profile"
        component={ProfileScreen}
        options={{
          tabBarLabel: '–ü—Ä–æ—Ñ–∏–ª—å',
          tabBarIcon: ({ color }) => <Text style={{ fontSize: 24 }}>üë§</Text>,
        }}
      />
    </Tab.Navigator>
  );
}

export default function App() {
  useEffect(() => {
    // –ó–∞–ø—Ä–æ—Å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π
    requestPermissions();
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    configurePushNotifications();
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Firebase Cloud Messaging
    configureFirebaseMessaging();
  }, []);

  const requestPermissions = async () => {
    if (Platform.OS === 'android') {
      try {
        // –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é
        const locationGranted = await PermissionsAndroid.request(
          PermissionsAndroid.PERMISSIONS.ACCESS_FINE_LOCATION,
          {
            title: '–†–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é',
            message: '–ü—Ä–∏–ª–æ–∂–µ–Ω–∏—é –Ω—É–∂–µ–Ω –¥–æ—Å—Ç—É–ø –∫ –≤–∞—à–µ–º—É –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—é –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏',
            buttonNeutral: '–°–ø—Ä–æ—Å–∏—Ç—å –ø–æ–∑–∂–µ',
            buttonNegative: '–û—Ç–º–µ–Ω–∞',
            buttonPositive: 'OK',
          }
        );

        // –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è (Android 13+)
        if (Platform.Version >= 33) {
          await PermissionsAndroid.request(
            PermissionsAndroid.PERMISSIONS.POST_NOTIFICATIONS
          );
        }

        console.log('‚úÖ –†–∞–∑—Ä–µ—à–µ–Ω–∏—è –ø–æ–ª—É—á–µ–Ω—ã');
      } catch (err) {
        console.warn('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π:', err);
      }
    }
  };

  const configurePushNotifications = () => {
    // –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ª–æ–∫–∞–ª—å–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    PushNotification.configure({
      onRegister: function (token) {
        console.log('TOKEN:', token);
      },

      onNotification: function (notification) {
        console.log('NOTIFICATION:', notification);
        
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        if (notification.userInteraction) {
          // –û—Ç–∫—Ä—ã—Ç—å –Ω—É–∂–Ω—ã–π —ç–∫—Ä–∞–Ω
          console.log('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ');
        }
      },

      permissions: {
        alert: true,
        badge: true,
        sound: true,
      },

      popInitialNotification: true,
      requestPermissions: Platform.OS === 'ios',
    });

    // –°–æ–∑–¥–∞—Ç—å –∫–∞–Ω–∞–ª –¥–ª—è Android
    PushNotification.createChannel(
      {
        channelId: 'dandy-courier-orders',
        channelName: '–ó–∞–∫–∞–∑—ã',
        channelDescription: '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –∑–∞–∫–∞–∑–∞—Ö',
        playSound: true,
        soundName: 'default',
        importance: 4,
        vibrate: true,
      },
      (created) => console.log(`–ö–∞–Ω–∞–ª —Å–æ–∑–¥–∞–Ω: ${created}`)
    );
  };

  const configureFirebaseMessaging = async () => {
    // –ó–∞–ø—Ä–æ—Å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è (iOS)
    const authStatus = await messaging().requestPermission();
    const enabled =
      authStatus === messaging.AuthorizationStatus.AUTHORIZED ||
      authStatus === messaging.AuthorizationStatus.PROVISIONAL;

    if (enabled) {
      console.log('‚úÖ –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—É—á–µ–Ω–æ');
      
      // –ü–æ–ª—É—á–∏—Ç—å FCM —Ç–æ–∫–µ–Ω
      const fcmToken = await messaging().getToken();
      console.log('FCM Token:', fcmToken);
      // –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–æ–∫–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ–Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    messaging().setBackgroundMessageHandler(async (remoteMessage) => {
      console.log('–§–æ–Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:', remoteMessage);
    });

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –∫–æ–≥–¥–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ—Ç–∫—Ä—ã—Ç–æ
    messaging().onMessage(async (remoteMessage) => {
      console.log('–°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–æ:', remoteMessage);
      
      // –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–∫–∞–ª—å–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
      PushNotification.localNotification({
        channelId: 'dandy-courier-orders',
        title: remoteMessage.notification?.title || '–ù–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ',
        message: remoteMessage.notification?.body || '',
        playSound: true,
        soundName: 'default',
        importance: 'high',
        vibrate: true,
        vibration: 300,
      });
    });
  };

  return (
    <NavigationContainer>
      <Stack.Navigator
        screenOptions={{
          headerShown: false,
        }}
      >
        <Stack.Screen name="Login" component={LoginScreen} />
        <Stack.Screen name="Main" component={MainTabs} />
        <Stack.Screen 
          name="OrderDetail" 
          component={OrderDetailScreen}
          options={{
            headerShown: true,
            headerTitle: '–î–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞',
            headerStyle: {
              backgroundColor: '#0b5c3b',
            },
            headerTintColor: '#fff',
          }}
        />
      </Stack.Navigator>
    </NavigationContainer>
  );
}

const Text = ({ children, style }) => {
  return <text style={style}>{children}</text>;
};
